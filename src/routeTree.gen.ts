/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as TexasRoomRouteImport } from './routes/texas-room'
import { Route as RoseRoomRouteImport } from './routes/rose-room'
import { Route as LogoutRouteImport } from './routes/logout'
import { Route as LoginRouteImport } from './routes/login'
import { Route as BookingRouteImport } from './routes/booking'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AdminIndexRouteImport } from './routes/admin/index'
import { Route as AccountIndexRouteImport } from './routes/account/index'
import { Route as AdminPropertyManagementRouteImport } from './routes/admin/property-management'
import { Route as AdminBookingsIndexRouteImport } from './routes/admin/bookings/index'
import { Route as AdminBookingsBookingIdRouteImport } from './routes/admin/bookings/$bookingId'
import { Route as AccountBookingBookingIdRouteImport } from './routes/account/booking/$bookingId'
import { ServerRoute as ApiTrpcSplatServerRouteImport } from './routes/api/trpc/$'
import { ServerRoute as ApiStripeSplatServerRouteImport } from './routes/api/stripe/$'
import { ServerRoute as ApiSendConfirmationEmailSplatServerRouteImport } from './routes/api/send-confirmation-email/$'
import { ServerRoute as ApiAuthSplatServerRouteImport } from './routes/api/auth/$'

const rootServerRouteImport = createServerRootRoute()

const TexasRoomRoute = TexasRoomRouteImport.update({
  id: '/texas-room',
  path: '/texas-room',
  getParentRoute: () => rootRouteImport,
} as any)
const RoseRoomRoute = RoseRoomRouteImport.update({
  id: '/rose-room',
  path: '/rose-room',
  getParentRoute: () => rootRouteImport,
} as any)
const LogoutRoute = LogoutRouteImport.update({
  id: '/logout',
  path: '/logout',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const BookingRoute = BookingRouteImport.update({
  id: '/booking',
  path: '/booking',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminIndexRoute = AdminIndexRouteImport.update({
  id: '/admin/',
  path: '/admin/',
  getParentRoute: () => rootRouteImport,
} as any)
const AccountIndexRoute = AccountIndexRouteImport.update({
  id: '/account/',
  path: '/account/',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminPropertyManagementRoute = AdminPropertyManagementRouteImport.update({
  id: '/admin/property-management',
  path: '/admin/property-management',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminBookingsIndexRoute = AdminBookingsIndexRouteImport.update({
  id: '/admin/bookings/',
  path: '/admin/bookings/',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminBookingsBookingIdRoute = AdminBookingsBookingIdRouteImport.update({
  id: '/admin/bookings/$bookingId',
  path: '/admin/bookings/$bookingId',
  getParentRoute: () => rootRouteImport,
} as any)
const AccountBookingBookingIdRoute = AccountBookingBookingIdRouteImport.update({
  id: '/account/booking/$bookingId',
  path: '/account/booking/$bookingId',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiTrpcSplatServerRoute = ApiTrpcSplatServerRouteImport.update({
  id: '/api/trpc/$',
  path: '/api/trpc/$',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiStripeSplatServerRoute = ApiStripeSplatServerRouteImport.update({
  id: '/api/stripe/$',
  path: '/api/stripe/$',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiSendConfirmationEmailSplatServerRoute =
  ApiSendConfirmationEmailSplatServerRouteImport.update({
    id: '/api/send-confirmation-email/$',
    path: '/api/send-confirmation-email/$',
    getParentRoute: () => rootServerRouteImport,
  } as any)
const ApiAuthSplatServerRoute = ApiAuthSplatServerRouteImport.update({
  id: '/api/auth/$',
  path: '/api/auth/$',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/booking': typeof BookingRoute
  '/login': typeof LoginRoute
  '/logout': typeof LogoutRoute
  '/rose-room': typeof RoseRoomRoute
  '/texas-room': typeof TexasRoomRoute
  '/admin/property-management': typeof AdminPropertyManagementRoute
  '/account': typeof AccountIndexRoute
  '/admin': typeof AdminIndexRoute
  '/account/booking/$bookingId': typeof AccountBookingBookingIdRoute
  '/admin/bookings/$bookingId': typeof AdminBookingsBookingIdRoute
  '/admin/bookings': typeof AdminBookingsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/booking': typeof BookingRoute
  '/login': typeof LoginRoute
  '/logout': typeof LogoutRoute
  '/rose-room': typeof RoseRoomRoute
  '/texas-room': typeof TexasRoomRoute
  '/admin/property-management': typeof AdminPropertyManagementRoute
  '/account': typeof AccountIndexRoute
  '/admin': typeof AdminIndexRoute
  '/account/booking/$bookingId': typeof AccountBookingBookingIdRoute
  '/admin/bookings/$bookingId': typeof AdminBookingsBookingIdRoute
  '/admin/bookings': typeof AdminBookingsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/booking': typeof BookingRoute
  '/login': typeof LoginRoute
  '/logout': typeof LogoutRoute
  '/rose-room': typeof RoseRoomRoute
  '/texas-room': typeof TexasRoomRoute
  '/admin/property-management': typeof AdminPropertyManagementRoute
  '/account/': typeof AccountIndexRoute
  '/admin/': typeof AdminIndexRoute
  '/account/booking/$bookingId': typeof AccountBookingBookingIdRoute
  '/admin/bookings/$bookingId': typeof AdminBookingsBookingIdRoute
  '/admin/bookings/': typeof AdminBookingsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/booking'
    | '/login'
    | '/logout'
    | '/rose-room'
    | '/texas-room'
    | '/admin/property-management'
    | '/account'
    | '/admin'
    | '/account/booking/$bookingId'
    | '/admin/bookings/$bookingId'
    | '/admin/bookings'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/booking'
    | '/login'
    | '/logout'
    | '/rose-room'
    | '/texas-room'
    | '/admin/property-management'
    | '/account'
    | '/admin'
    | '/account/booking/$bookingId'
    | '/admin/bookings/$bookingId'
    | '/admin/bookings'
  id:
    | '__root__'
    | '/'
    | '/booking'
    | '/login'
    | '/logout'
    | '/rose-room'
    | '/texas-room'
    | '/admin/property-management'
    | '/account/'
    | '/admin/'
    | '/account/booking/$bookingId'
    | '/admin/bookings/$bookingId'
    | '/admin/bookings/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  BookingRoute: typeof BookingRoute
  LoginRoute: typeof LoginRoute
  LogoutRoute: typeof LogoutRoute
  RoseRoomRoute: typeof RoseRoomRoute
  TexasRoomRoute: typeof TexasRoomRoute
  AdminPropertyManagementRoute: typeof AdminPropertyManagementRoute
  AccountIndexRoute: typeof AccountIndexRoute
  AdminIndexRoute: typeof AdminIndexRoute
  AccountBookingBookingIdRoute: typeof AccountBookingBookingIdRoute
  AdminBookingsBookingIdRoute: typeof AdminBookingsBookingIdRoute
  AdminBookingsIndexRoute: typeof AdminBookingsIndexRoute
}
export interface FileServerRoutesByFullPath {
  '/api/auth/$': typeof ApiAuthSplatServerRoute
  '/api/send-confirmation-email/$': typeof ApiSendConfirmationEmailSplatServerRoute
  '/api/stripe/$': typeof ApiStripeSplatServerRoute
  '/api/trpc/$': typeof ApiTrpcSplatServerRoute
}
export interface FileServerRoutesByTo {
  '/api/auth/$': typeof ApiAuthSplatServerRoute
  '/api/send-confirmation-email/$': typeof ApiSendConfirmationEmailSplatServerRoute
  '/api/stripe/$': typeof ApiStripeSplatServerRoute
  '/api/trpc/$': typeof ApiTrpcSplatServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/auth/$': typeof ApiAuthSplatServerRoute
  '/api/send-confirmation-email/$': typeof ApiSendConfirmationEmailSplatServerRoute
  '/api/stripe/$': typeof ApiStripeSplatServerRoute
  '/api/trpc/$': typeof ApiTrpcSplatServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths:
    | '/api/auth/$'
    | '/api/send-confirmation-email/$'
    | '/api/stripe/$'
    | '/api/trpc/$'
  fileServerRoutesByTo: FileServerRoutesByTo
  to:
    | '/api/auth/$'
    | '/api/send-confirmation-email/$'
    | '/api/stripe/$'
    | '/api/trpc/$'
  id:
    | '__root__'
    | '/api/auth/$'
    | '/api/send-confirmation-email/$'
    | '/api/stripe/$'
    | '/api/trpc/$'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiAuthSplatServerRoute: typeof ApiAuthSplatServerRoute
  ApiSendConfirmationEmailSplatServerRoute: typeof ApiSendConfirmationEmailSplatServerRoute
  ApiStripeSplatServerRoute: typeof ApiStripeSplatServerRoute
  ApiTrpcSplatServerRoute: typeof ApiTrpcSplatServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/texas-room': {
      id: '/texas-room'
      path: '/texas-room'
      fullPath: '/texas-room'
      preLoaderRoute: typeof TexasRoomRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/rose-room': {
      id: '/rose-room'
      path: '/rose-room'
      fullPath: '/rose-room'
      preLoaderRoute: typeof RoseRoomRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/logout': {
      id: '/logout'
      path: '/logout'
      fullPath: '/logout'
      preLoaderRoute: typeof LogoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/booking': {
      id: '/booking'
      path: '/booking'
      fullPath: '/booking'
      preLoaderRoute: typeof BookingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/': {
      id: '/admin/'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/account/': {
      id: '/account/'
      path: '/account'
      fullPath: '/account'
      preLoaderRoute: typeof AccountIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/property-management': {
      id: '/admin/property-management'
      path: '/admin/property-management'
      fullPath: '/admin/property-management'
      preLoaderRoute: typeof AdminPropertyManagementRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/bookings/': {
      id: '/admin/bookings/'
      path: '/admin/bookings'
      fullPath: '/admin/bookings'
      preLoaderRoute: typeof AdminBookingsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/admin/bookings/$bookingId': {
      id: '/admin/bookings/$bookingId'
      path: '/admin/bookings/$bookingId'
      fullPath: '/admin/bookings/$bookingId'
      preLoaderRoute: typeof AdminBookingsBookingIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/account/booking/$bookingId': {
      id: '/account/booking/$bookingId'
      path: '/account/booking/$bookingId'
      fullPath: '/account/booking/$bookingId'
      preLoaderRoute: typeof AccountBookingBookingIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/trpc/$': {
      id: '/api/trpc/$'
      path: '/api/trpc/$'
      fullPath: '/api/trpc/$'
      preLoaderRoute: typeof ApiTrpcSplatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/stripe/$': {
      id: '/api/stripe/$'
      path: '/api/stripe/$'
      fullPath: '/api/stripe/$'
      preLoaderRoute: typeof ApiStripeSplatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/send-confirmation-email/$': {
      id: '/api/send-confirmation-email/$'
      path: '/api/send-confirmation-email/$'
      fullPath: '/api/send-confirmation-email/$'
      preLoaderRoute: typeof ApiSendConfirmationEmailSplatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/auth/$': {
      id: '/api/auth/$'
      path: '/api/auth/$'
      fullPath: '/api/auth/$'
      preLoaderRoute: typeof ApiAuthSplatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  BookingRoute: BookingRoute,
  LoginRoute: LoginRoute,
  LogoutRoute: LogoutRoute,
  RoseRoomRoute: RoseRoomRoute,
  TexasRoomRoute: TexasRoomRoute,
  AdminPropertyManagementRoute: AdminPropertyManagementRoute,
  AccountIndexRoute: AccountIndexRoute,
  AdminIndexRoute: AdminIndexRoute,
  AccountBookingBookingIdRoute: AccountBookingBookingIdRoute,
  AdminBookingsBookingIdRoute: AdminBookingsBookingIdRoute,
  AdminBookingsIndexRoute: AdminBookingsIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiAuthSplatServerRoute: ApiAuthSplatServerRoute,
  ApiSendConfirmationEmailSplatServerRoute:
    ApiSendConfirmationEmailSplatServerRoute,
  ApiStripeSplatServerRoute: ApiStripeSplatServerRoute,
  ApiTrpcSplatServerRoute: ApiTrpcSplatServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
